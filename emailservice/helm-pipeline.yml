#Pipeline to depoly helm-chart of the respective MS when the respective image is build
trigger:
- master
- dev

pool:
  vmImage: 'Ubuntu 16.04'
  
variables:
  myregistry: "dagile"
  containerRegistry: "dagile.azurecr.io" 
  imageRepository: "emailservice"
  image_name: "emailservice"
  tag: "latest"
  releaseName: "emailservice"
  nameSpace: "emailservice"

stages:
- stage: pull
  jobs:
  - job: pull_image_from_acr

    steps:
    - script: |
        az login
        az acr login --name $(myregistry)
        docker pull $(containerRegistry)/$(imageRepository):$(tag)
        
#    - task: Docker@2
#      inputs:
#        command: build
#        repository: "$(image_name)"
#        tags: "$(tag)"

- stage: Scan
  jobs:
  - job: scan_image

    steps:
    - task: CmdLine@2
      displayName: Scan
      inputs:
        script: |
         docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v $HOME/Library/Caches:/root/.cache/ aquasec/trivy --exit-code 0 --severity MEDIUM,HIGH --ignore-unfixed $(containerRegistry)/$(imageRepository):$(tag)
         
         docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v $HOME/Library/Caches:/root/.cache/ aquasec/trivy --exit-code 1 --severity CRITICAL --ignore-unfixed $(containerRegistry)/$(imageRepository):$(tag)

# - stage: deploy
#   jobs:
#   - job: deploy_helm_chart
  
#     steps:
#     - script: |
#         cd emailservice
#         helm deploy $(releaseName) ./helmchart -n $(nameSpace)
     
    
    

