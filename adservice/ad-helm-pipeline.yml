trigger:
- master
- dev

pool:
  vmImage: 'Ubuntu 16.04'
  
variables:
  trivyVersion: 0.9.2
  tag: 'azuredevops-$(Build.BuildNumber)'
  image_name: "adservice"

stages:
- stage: build
  jobs:
  - job: build

    steps:
    - script: |
        cd adservice
        docker login -u "${dockerid}" -p "${dockerpswd}"
#        az login
#        az acr login --name dagile --expose-token
#        TOKEN=$(az acr login --name dagile --expose-token --output tsv --query accessToken)
#        docker login dagile.azurecr.io --username 00000000-0000-0000-0000-000000000000 --password $TOKEN
#       az acr login --name $(myregistry) 
#       docker pull $(containerRegistry)/$(imageRepository):$(tag)
        
    - task: Docker@2
      inputs:
        command: build
        repository: "$(image_name)"
        tags: "$(tag)"

- stage: Scan
  jobs:
  - job: scan_image

    steps:
    - task: CmdLine@2
      displayName: Scan
      inputs:
        script: |
          sudo apt-get install rpm
          wget https://github.com/aquasecurity/trivy/releases/download/v$(trivyVersion)/trivy_$(trivyVersion)_Linux-64bit.deb
          sudo dpkg -i trivy_$(trivyVersion)_Linux-64bit.deb
          trivy -v
        displayName: 'Download and install Trivy'

    - task: CmdLine@2
      displayName: "Run trivy scan"
      inputs:
        script: |
            trivy image --exit-code 0 --severity LOW,MEDIUM $(image_name):$(tag)
            trivy image --exit-code 1 --severity HIGH,CRITICAL $(image_name):$(tag)