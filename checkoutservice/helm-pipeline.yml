#Pipeline to depoly helm-chart of the respective MS when the respective image is build
trigger:
- master

pool:
  vmImage: 'Ubuntu 16.04'

variables:
  imageName-3: 'checkoutservice'
  containerRegistry: 'dagile.azurecr.io'
  myregistry: 'dagile'
  tag: 'latest'
  repo: 'online_boutique'

stages:
- stage: build_and_push
  jobs:
  - job: build_and_pull_docker_image_from_dockerhub

    steps:
    - script: |
        az login
        az acr login --name $(myregistry)
        docker pull $(containerRegistry)/$(imageName-3):$(tag)

- stage: list 
  jobs:
  - job: list_docker_image 
       
    steps:
    - script: |
        docker images

- stage: scan 
  jobs:
  - job: scan_docker_image
  
    steps:
    - task: CmdLine@2
      displayName: Scan
      inputs:
        script: |
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v $HOME/Library/Caches:/root/.cache/ aquasec/trivy --exit-code 0 --severity MEDIUM,HIGH --ignore-unfixed $(containerRegistry)/$(imageName-3):$(tag)
         
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v $HOME/Library/Caches:/root/.cache/ aquasec/trivy --exit-code 1 --severity CRITICAL --ignore-unfixed $(containerRegistry)/$(imageName-3):$(tag)

#    - script: |
#        cd checkoutservice
#        docker scan --file Dockerfile checkoutservice

#        cd checkoutservice
#        curl -s https://ci-tools.anchore.io/inline_scan-v0.6.0
#        bash -s -- -f -r $(img-nm-tg-3):$(tag)
        
#    - task: Anchore@0
#      inputs:
#        image: "${imageName-3}"
#        dockerfile: adservice/Dockerfile
#        failBuild: true
